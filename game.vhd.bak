library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity game is
    port(
        -- up, down, left, right, start, sel: in std_logic; -- the control signals
        -- clk50MHZ: in std_logic; -- the input clock signal
        -- r, g, b: out std_logic_vector(3 downto 0); -- vga output signals
        -- h_sync, vsync: out std_logic
        KEY : in std_logic_vector(1 downto 0);
        SW : in std_logic_vector(9 downto 0);
        LEDR : out std_logic_vector(9 downto 0)
    );
end game;


architecture test of game is
type state is (play, no_play); -- the state type of the game
type co_ordinate is array 0 to 1 of integer; -- the current co-ordinate type
signal pol: std_logic_vector(9 downto 0);
signal current: state := no_play; -- the current state
signal coord : co_ordinate: (0, 0);


begin
    my : process(KEY)
    begin
        if(KEY(0) = 1) then
            coord(0) <= coord(0) + 1;
        elsif (KEY(1) = 1) then
            coord(1) <= coord(1) + 1;
        end if;
        ppl <= std_logic_vector(to_unsigned(coord(0), 5)) & std_logic_vector(to_unsigned(coord(1), 5))
    end process;
    LEDR <= pol;
end architecture;